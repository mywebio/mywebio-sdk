#* @vtlvariable name="endpoints" type="java.util.List<io.myweb.processor.model.ParsedMethod>" *#
#* @vtlvariable name="filters" type="java.util.List<io.myweb.processor.model.ParsedFilter>" *#
package io.myweb;

import android.content.Intent;
import android.os.IBinder;
import android.util.Log;

import java.util.Collections;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import io.myweb.http.Method;

public class Service extends android.app.Service {

	public static final String TAG = Service.class.getName();

	private static final List<Endpoint.Info> endpointList;
	private static final List<Filter> filterList;

	static {
		List<Endpoint.Info> el = new ArrayList<Endpoint.Info>();
		el.add(new Endpoint.Info(Method.GET, AppInfoEndpoint.SERVICES_JSON, AppInfoEndpoint.class));
		el.add(new Endpoint.Info(Method.GET, "/", AssetEndpoint.class));
#foreach( $parsedMethod in $endpoints )
		el.add(new Endpoint.Info(Method.$parsedMethod.httpMethod, "$parsedMethod.httpUri", ${parsedMethod.generatedClassName}.class));
#end
		endpointList = Collections.unmodifiableList(el);

		List<Filter> lf = new ArrayList<Filter>();
#foreach( $parsedFilter in $filters )
		lf.add(new ${parsedFilter.generatedClassName}());
#end
		filterList = Collections.unmodifiableList(lf);
	}

	private ExecutorService executorService;

	private Server server;

	@Override
	public int onStartCommand(Intent intent, int flags, int startId) {
		Log.d(TAG, "Received intent from server");
		return android.app.Service.START_NOT_STICKY;
	}

	@Override
	public void onCreate() {
		super.onCreate();
		Log.d(TAG, "Creating web service");
		executorService = Executors.newSingleThreadExecutor(ThreadFactories.newServerThreadFactory());
		server = new Server(this, endpointList, filterList, new MyAssetInfo());
		executorService.submit(server);
	}

	@Override
	public void onDestroy() {
		Log.d(TAG, "Destroying web service");
		server.shutdown();
		executorService.shutdown();
	}

	@Override
	public IBinder onBind(Intent intent) {
		return null;
	}

}
