#* @vtlvariable name="esc" type="org.apache.commons.lang3.StringEscapeUtils" *#
#* @vtlvariable name="methods" type="java.util.List<io.myweb.processor.model.ParsedMethod>" *#
package io.myweb;

#set( $json="#parse('app-info-json.vm')")

import android.content.Context;
import android.net.LocalSocket;
import android.util.Log;

import java.io.*;
import java.util.Map;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import io.myweb.Endpoint;
import io.myweb.ResponseWriter;
import io.myweb.api.*;

public class AppInfoEndpoint extends Endpoint {

    public AppInfoEndpoint(Context ctx) {
        super(ctx);
    }

	protected Method httpMethod() {
		return Method.GET;
	}

	protected String originalPath() {
		return "/services.json";
	}

    private Pattern pattern = Pattern.compile(originalPath());

    @Override
    protected Pattern getPattern() {
        return pattern;
    }

    private String pkgName() {
        return getContext().getPackageName();
    }

    private String appName() {
        CharSequence charSequence = getContext().getApplicationInfo().loadLabel(getContext().getPackageManager());
        return charSequence.toString();
    }

    private final String SERVICES_TEMPL = "$esc.escapeJava($json)";

    private String servicesJson = null;

    private String servicesJson() {
        synchronized (this) {
            if (servicesJson == null) {
                servicesJson = String.format(SERVICES_TEMPL, pkgName(), appName());
            }
            return servicesJson;
        }
    }

	@Override
	public void invoke(String uri, Request request, LocalSocket localSocket) {
        try {
            ResponseWriter rw = new ResponseWriter(localSocket);
            // TODO old behaviour
            rw.writeRequestId(request.getId());
            rw.write(Response.ok().withContentType(MimeTypes.MIME_APPLICATION_JSON).withBody(servicesJson()));
            rw.close();
        } catch (Exception e) {
            Log.d("AppInfoEndpoint", "", e);
        }
	}
}
