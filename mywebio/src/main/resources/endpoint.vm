#* @vtlvariable name="i" type="io.myweb.processor.model.ParsedMethod" *#
/*
 * GENERATED FILE
 */
package io.myweb;

import android.content.Context;
import android.util.Log;
import android.net.LocalSocket;

import java.io.*;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import io.myweb.Endpoint;
import io.myweb.ResponseBuilder;

public class $i.generatedClassName extends Endpoint {

    public ${i.generatedClassName}(Context context) {
        super(context);
    }

    protected String httpMethod() {
        return "$i.httpMethod";
    }

    protected String originalPath() {
        return "$i.httpUri";
    }

    private Pattern pattern = Pattern.compile("$i.patternStr");

    @Override
    protected Pattern getPattern() {
        return pattern;
    }

    @Override
	public void invoke(String uri, String request, LocalSocket localSocket, String reqId) {
		try {
			ActualParam[] ap = actualParams(uri, request);
            OutputStream os = outputStream(localSocket);
            writeResponseHeaders(os, reqId);
            final ${i.destMethodRetType} respFromUserCode = new ${i.destClass}().${i.destMethod}($i.paramsJavaSrc);
            ResponseBuilder responseBuilder = new ResponseBuilder();
            responseBuilder.writeResponse("${i.produces}", respFromUserCode, os);
        } catch (Exception e) {
            Log.d("Endpoint", "error during invoke", e);
        }
    }
}
